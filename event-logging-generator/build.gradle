ext.moduleName = 'event.logging.generator'

def schemaDir = project.file('schema')

// In this section you declare the dependencies for your production and test code
dependencies {
    compile "org.slf4j:slf4j-api:${versions.slf4j}"
    runtime "net.sf.saxon:Saxon-HE:${versions.saxon}"
}

task clearSchemaDir(type: Delete) {
    //ensure the import directory exists
    schemaDir.mkdirs()

    //cleans out any zip files in the contentPackImportDir
    delete fileTree(schemaDir) {
        include '**/*.xsd'
    }
}

task downloadSchema() {

    dependsOn clearSchemaDir

    doLast {
        schemaDir.mkdirs()

        println "Downloading schema from ${eventLoggingSchemaUrl}"
        //now get the visualisations pack from a different repo
        download {
            src eventLoggingSchemaUrl
            dest schemaDir
            overwrite true
        }
    }
}


task runGenClasses(type: JavaExec) {

  dependsOn downloadSchema

  classpath = sourceSets.main.runtimeClasspath

  main = 'event.logging.gen.GenClasses'
}


clean{
    //the contents of src is transient so clear it out
    delete "schema"
}
