plugins {
    id 'com.github.johnrengelman.shadow' version '1.2.4'
}

//apply plugin: 'application'
apply plugin: 'ca.cutterslade.analyze'

//def jarName = "event-logging-api-${versions.eventLogging}.jar"
//def fatJarName = "event-logging-api-${versions.eventLogging}-all.jar"
def schemaDir = project.file('schema')

// In this section you declare the dependencies for your production and test code
dependencies {

    // The production code uses the SLF4J logging API at compile time
    compile "org.slf4j:slf4j-api:${versions.slf4j}"

    //runtime "net.sf.saxon:Saxon-HE:${versions.saxon}"
    //runtime "ch.qos.logback:logback-classic:${versions.logback}"

    testCompile "junit:junit:${versions.junit}"
}

jar {
    manifest {
        attributes(
                "Implementation-Title": "Event-Logging-Transformations",
                "Implementation-Version": versions.eventLogging,
        )
    }
    //archiveName jarName
}

shadowJar {
    // Allows us to build fat jars with lots of files
    zip64 true

    //archiveName fatJarName
}

task javadocJar(type: Jar) {
    dependsOn javadoc
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
artifacts {
    archives sourcesJar
}


clean{
    //the contents of src is transient so clear it out
    delete "src/main"
    delete "src/test"
}

tasks.build.dependsOn shadowJar
tasks.compileJava.dependsOn ':event-logging-generator:runGenClasses'
