/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.7.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    mavenLocal()
    mavenCentral()
}

ext.versions = [
    //eventLogging: '5.0-beta.27_schema-v4.0-beta.3',
    eventLogging: 'schema-v4.0-beta.3-SNAPSHOT',
    logback : '1.2.3',
    //jaxbRuntime: '2.3.2',
]

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}

dependencies {
    // The event logging library
    implementation "uk.gov.gchq.eventlogging:event-logging:$versions.eventLogging"

    // event-logging uses the SLF4J logging API
    implementation 'org.slf4j:slf4j-api:1.7.30'

    // The JAXB implementation required for event serialisation to XML
    //runtime "org.glassfish.jaxb:jaxb-runtime:${versions.jaxb_impl}"

    // Used by this example application at run time to log output to the console
    // Other SLF4J implementations can be used
    runtimeOnly "ch.qos.logback:logback-classic:$versions.logback"
    runtimeOnly "ch.qos.logback:logback-core:$versions.logback"

    // Use JUnit Jupiter API for testing this example application.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    testImplementation 'org.assertj:assertj-core:3.20.2'

    // Use JUnit Jupiter Engine for testing this example application.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

application {
    // Define the main class for the application.
    mainClass = 'event.logging.example.App'
}

run{
    // Application is interactive so attach stdin
    standardInput = System.in
}

tasks.named('test') {
    // Use junit platform for unit tests.
    useJUnitPlatform()
}
